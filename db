#!/usr/bin/env bash

### setup

# checking for npm
if ! command -v 'npm' &>/dev/null; then
    echo "npm not found, npm and nodejs are required for this bot"
    exit 1
fi

# checking for npx
if ! command -v 'npx' &>/dev/null; then
    echo "npx not found, cannot run Prisma which is required for the bot"
    exit 1
fi

# checking if prisma is intalled
if ! eval "$(npm list | grep 'prisma' &>/dev/null)"; then
    echo "prisma is not installed, run 'npm i .' to install all packages for the project"
    exit 1
fi

# checking for sqlite3
if ! command -v 'sqlite3' &>/dev/null; then
    echo "sqlite3 not found, required to create the database for the bot"
    exit 1
fi

# vars
DB="main.db"
BACKUPDIR="backups"

### functions

# usage function
usage() {
    echo "$0 <pull|init|reset|backup|clear>"
    echo
    echo -e "\tpull\t- calls Prisma to generate a schema from the database"
    echo -e "\tinit\t- creates a SQLite3 database ($DB) with prisma/schema.sql"
    echo -e "\treset\t- backs up, deletes, recreates the database and calls Prisma"
    echo -e "\tbackup\t- creates a backup of the current database"
    echo -e "\tclear\t- removes all backups"
}

# removing all backups
__clear() {
    rm -rfv "${BACKUPDIR:?}/"
}

# backing up the database
backup() {
    # creating backup dir if not exists
    if [ ! -d "$BACKUPDIR" ]; then
        mkdir "$BACKUPDIR"
    fi

    # forming name of backup
    TARGET="$(cut -d '.' -f 1 <<< $DB).$(date -I'seconds' -u | cut -d '+' -f 1).db"

    # logging
    echo "Creating backup database, $TARGET"

    # making copy
    cp -v "$DB" "$BACKUPDIR/$TARGET"
}

# calling prisma to pull & generate a schema from the database
pull() {
    # logging
    echo "Updating prisma to changes made to the schema"

    # if npx call prisma (this should already be installed)
    npx prisma db pull
    npx prisma generate
}

# create the database function
init() {
    # making backup if database exists
    if [ -f "$DB" ]; then
        echo "Not overwriting an existing database"
        backup
        rm "$DB"
    fi

    # creating
    cat "prisma/schema.sql" | sqlite3 "$DB"

    # logging
    echo "Created $DB"
}

# checking args
[ $# -eq 0 ] && usage && exit 1

# parsing arguments
case "$1" in
    b*)
        backup
        ;;
    c*)
        __clear
        ;;
    p*)
        pull
        ;;
    i*)
        init
        ;;
    r*)
        backup
        rm "$DB"
        init
        pull
        ;;
    *)
        usage
        exit 1
        ;;
esac

# exit code
exit 0

